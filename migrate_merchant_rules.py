#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∞–≤–∏–ª –º–µ—Ä—á–∞–Ω—Ç–æ–≤
"""

import os
import sys
from app import create_app, db
from app.models import MerchantRule, Category

def create_merchant_rules_table():
    """–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∞–≤–∏–ª –º–µ—Ä—á–∞–Ω—Ç–æ–≤"""
    print("Creating merchant_rules table...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    db.create_all()
    
    print("‚úÖ merchant_rules table created successfully")

def add_sample_rules():
    """–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª"""
    print("Adding sample merchant rules...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    health_category = Category.query.filter_by(name='–ó–¥–æ—Ä–æ–≤—å–µ').first()
    food_category = Category.query.filter_by(name='–ü—Ä–æ–¥—É–∫—Ç—ã').first()
    transport_category = Category.query.filter_by(name='–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç').first()
    
    sample_rules = []
    
    if health_category:
        sample_rules.append(MerchantRule(
            pattern='GORZDRAV',
            merchant_name='RU/Voronezh/GORZDRAV_5620',
            category_id=health_category.id,
            subcategory='–ì–æ—Ä–∑–¥—Ä–∞–≤',
            priority=1,
            rule_type='contains'
        ))
        
        sample_rules.append(MerchantRule(
            pattern='APTEKA',
            merchant_name='RU/Moscow/APTEKA_366',
            category_id=health_category.id,
            subcategory='–ê–ø—Ç–µ–∫–∞ 36.6',
            priority=2,
            rule_type='contains'
        ))
    
    if food_category:
        sample_rules.append(MerchantRule(
            pattern='PYATEROCHKA',
            merchant_name='RU/Moscow/PYATEROCHKA_1234',
            category_id=food_category.id,
            subcategory='–ü—è—Ç—ë—Ä–æ—á–∫–∞',
            priority=1,
            rule_type='contains'
        ))
        
        sample_rules.append(MerchantRule(
            pattern='MAGNIT',
            merchant_name='RU/Krasnodar/MAGNIT_5678',
            category_id=food_category.id,
            subcategory='–ú–∞–≥–Ω–∏—Ç',
            priority=1,
            rule_type='contains'
        ))
    
    if transport_category:
        sample_rules.append(MerchantRule(
            pattern='LUKOIL',
            merchant_name='RU/Moscow/LUKOIL_AZS_123',
            category_id=transport_category.id,
            subcategory='–õ—É–∫–æ–π–ª',
            priority=1,
            rule_type='contains'
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –≤ –±–∞–∑—É
    for rule in sample_rules:
        existing = MerchantRule.query.filter_by(pattern=rule.pattern).first()
        if not existing:
            db.session.add(rule)
    
    try:
        db.session.commit()
        print(f"‚úÖ Added {len(sample_rules)} sample merchant rules")
    except Exception as e:
        db.session.rollback()
        print(f"‚ùå Error adding sample rules: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    app = create_app()
    
    with app.app_context():
        try:
            print("üöÄ Starting merchant rules migration...")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
            create_merchant_rules_table()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª
            add_sample_rules()
            
            print("‚úÖ Merchant rules migration completed successfully!")
            
        except Exception as e:
            print(f"‚ùå Migration failed: {e}")
            sys.exit(1)

if __name__ == '__main__':
    main()