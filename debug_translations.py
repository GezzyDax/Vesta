#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤
"""
import os
import gettext as gettext_module

def debug_translations():
    print("üîç –û—Ç–ª–∞–¥–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
    translations_dir = "/home/gezzy/pyprod/Vesta/translations"
    print(f"üìÅ –ü–∞–ø–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {translations_dir}")
    print(f"   –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(translations_dir)}")
    
    if os.path.exists(translations_dir):
        print("üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏:")
        for item in os.listdir(translations_dir):
            item_path = os.path.join(translations_dir, item)
            print(f"   ‚Ä¢ {item} {'(–ø–∞–ø–∫–∞)' if os.path.isdir(item_path) else '(—Ñ–∞–π–ª)'}")
            
            if os.path.isdir(item_path):
                lc_messages = os.path.join(item_path, "LC_MESSAGES")
                if os.path.exists(lc_messages):
                    print(f"     ‚îî‚îÄ LC_MESSAGES:")
                    for file in os.listdir(lc_messages):
                        file_path = os.path.join(lc_messages, file)
                        size = os.path.getsize(file_path)
                        print(f"        ‚Ä¢ {file} ({size} –±–∞–π—Ç)")
    
    # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞–ø—Ä—è–º—É—é
    print("\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:")
    
    for lang in ['ru', 'en']:
        print(f"  üåç –Ø–∑—ã–∫: {lang}")
        try:
            translation = gettext_module.translation('messages', translations_dir, languages=[lang])
            print(f"    ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥
            test_strings = ['Type', 'All Types', 'Income', 'Expenses']
            for test_str in test_strings:
                result = translation.gettext(test_str)
                status = "‚úÖ" if result != test_str else "‚ùå"
                print(f"    {status} '{test_str}' -> '{result}'")
                
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
    
    print("\nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö .mo —Ñ–∞–π–ª–æ–≤:")
    
    for lang in ['ru', 'en']:
        mo_path = os.path.join(translations_dir, lang, 'LC_MESSAGES', 'messages.mo')
        print(f"  üìÑ {mo_path}")
        print(f"    –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(mo_path)}")
        
        if os.path.exists(mo_path):
            size = os.path.getsize(mo_path)
            print(f"    –†–∞–∑–º–µ—Ä: {size} –±–∞–π—Ç")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
            try:
                with open(mo_path, 'rb') as f:
                    magic = f.read(4)
                    print(f"    Magic bytes: {magic.hex()}")
                    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ magic bytes –¥–ª—è .mo —Ñ–∞–π–ª–∞: 950412de –∏–ª–∏ de120495
                    if magic in [b'\x95\x04\x12\xde', b'\xde\x12\x04\x95']:
                        print(f"    ‚úÖ –§–æ—Ä–º–∞—Ç .mo –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")
                    else:
                        print(f"    ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç .mo —Ñ–∞–π–ª–∞")
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

if __name__ == "__main__":
    debug_translations()